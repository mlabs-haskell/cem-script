[{"display_html":"<span class=\"keyword\">class</span> (<a href=\"../base/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> (<a href=\"Data-Spine.html#t:Spine\" title=\"Data.Spine\">Spine</a> sop), <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> (<a href=\"Data-Spine.html#t:Spine\" title=\"Data.Spine\">Spine</a> sop)) =&gt; <a href=\"#t:HasSpine\">HasSpine</a> sop <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:Spine\">Spine</a> sop</li><li><a href=\"#v:getSpine\">getSpine</a> :: sop -&gt; <a href=\"Data-Spine.html#t:Spine\" title=\"Data.Spine\">Spine</a> sop</li></ul>","name":"HasSpine Spine getSpine","module":"Data.Spine","link":"Data-Spine.html#t:HasSpine"},{"display_html":"<a href=\"#v:deriveSpine\">deriveSpine</a> :: <a href=\"../template-haskell/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"../template-haskell/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSpine","module":"Data.Spine","link":"Data-Spine.html#v:deriveSpine"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:OfSpine\">OfSpine</a> (x :: <a href=\"Data-Spine.html#t:Spine\" title=\"Data.Spine\">Spine</a> datatype) = <a href=\"#v:UnsafeMkOfSpine\">UnsafeMkOfSpine</a> {<ul class=\"subs\"><li><a href=\"#v:getValue\">getValue</a> :: datatype</li></ul>}","name":"OfSpine UnsafeMkOfSpine $sel:getValue:UnsafeMkOfSpine","module":"Data.Spine","link":"Data-Spine.html#t:OfSpine"}]